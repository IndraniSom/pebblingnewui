name: ui to Railway

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Run linters
        run: pnpm lint

      # Uncomment if needed
      # - name: Run tests
      #   run: pnpm test

      - name: Build project
        run: pnpm build

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          # Set RAILWAY_PROJECT environment variable for the CLI to pick up the project ID
          RAILWAY_PROJECT: ${{ secrets.RAILWAY_PROJECT_ID }}
        run: |
          echo "Deploying with Railway..."
          # Explicitly export environment variables to ensure they are available to the shell.
          # IMPORTANT: Double-check that RAILWAY_TOKEN and RAILWAY_PROJECT_ID are correctly
          # configured in your GitHub repository secrets. The error "Project Token not found"
          # often indicates an issue with the secret values or names themselves.
          export RAILWAY_TOKEN=${{ secrets.RAILWAY_TOKEN }}
          export RAILWAY_PROJECT=${{ secrets.RAILWAY_PROJECT_ID }}
          # The Railway CLI will automatically use RAILWAY_TOKEN and RAILWAY_PROJECT from environment variables.
          railway up --detach
